(()=>{"use strict";class e{workFromHome(){return"Working from home"}getCoffeeBreak(){return"Getting a coffee break"}workDirectorTasks(){return"Getting to director tasks"}}class o{workFromHome(){return"Cannot work from home"}getCoffeeBreak(){return"Cannot have a break"}workTeacherTasks(){return"Getting to work"}}function r(r){return"number"==typeof r&&r<500?new o:new e}function t(o){return function(o){return o instanceof e}(o)?o.workDirectorTasks():o.workTeacherTasks()}console.log("Employee with salary 200:");const n=r(200);console.log(n),console.log(n.workFromHome()),console.log(n.getCoffeeBreak()),console.log("\nEmployee with salary 1000:");const s=r(1e3);console.log(s),console.log(s.workFromHome()),console.log(s.getCoffeeBreak()),console.log('\nEmployee with salary "$500":');const a=r("$500");console.log(a),console.log(a.workFromHome()),console.log(a.getCoffeeBreak()),console.log("\nExecute work for employee with salary 200:"),console.log(t(r(200))),console.log("\nExecute work for employee with salary 1000:"),console.log(t(r(1e3))),document.addEventListener("DOMContentLoaded",()=>{const n=document.getElementById("app");if(n){let s="<h2>Employee Creation Examples:</h2>";s+="<h3>Salary: 200 (Expected: Teacher)</h3>";const a=r(200);s+=`<p>Type: ${a instanceof o?"Teacher":"Director"}</p>`,s+=`<p>Work from Home: ${a.workFromHome()}</p>`,s+=`<p>Get Coffee Break: ${a.getCoffeeBreak()}</p>`,a instanceof o&&(s+=`<p>Teacher Tasks: ${a.workTeacherTasks()}</p>`),s+="<h3>Salary: 1000 (Expected: Director)</h3>";const c=r(1e3);s+=`<p>Type: ${c instanceof o?"Teacher":"Director"}</p>`,s+=`<p>Work from Home: ${c.workFromHome()}</p>`,s+=`<p>Get Coffee Break: ${c.getCoffeeBreak()}</p>`,c instanceof e&&(s+=`<p>Director Tasks: ${c.workDirectorTasks()}</p>`),s+='<h3>Salary: "$500" (Expected: Director)</h3>';const l=r("$500");s+=`<p>Type: ${l instanceof o?"Teacher":"Director"}</p>`,s+=`<p>Work from Home: ${l.workFromHome()}</p>`,s+=`<p>Get Coffee Break: ${l.getCoffeeBreak()}</p>`,l instanceof e&&(s+=`<p>Director Tasks: ${l.workDirectorTasks()}</p>`),s+="<h2>Execute Work Examples:</h2>",s+=`<p>Employee (salary 200) work: <strong>${t(r(200))}</strong></p>`,s+=`<p>Employee (salary 1000) work: <strong>${t(r(1e3))}</strong></p>`,n.innerHTML=s}else console.error("Element with ID 'app' not found.")})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,